apply plugin: 'java'
apply plugin: 'java-library'

repositories {
  jcenter()
}

buildscript {
  repositories.mavenLocal()
}


//compileJava {
//    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
//}

dependencies {
  implementation 'com.google.guava:guava:20.0'
  compile 'uk.co.xfactory-librarians:coremidi4j:1.0'
  testCompile "com.google.truth:truth:0.31"
  testCompile "com.google.truth.extensions:truth-java8-extension:0.32"
  testCompile 'org.mockito:mockito-core:2.+'
  testImplementation 'junit:junit:4.12'
}

task allBlue(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  main = 'com.salisburyclan.lpviewport.apps.AllBlue'
  if (project.hasProperty('lcs')) {
    args lcs
  }
}

task rainbow(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  main = 'com.salisburyclan.lpviewport.apps.Rainbow'
  if (project.hasProperty('lcs')) {
    args lcs
  }
}

task spark(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  main = 'com.salisburyclan.lpviewport.apps.Spark'
  if (project.hasProperty('lcs')) {
    args lcs
  }
}

task sweep(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  main = 'com.salisburyclan.lpviewport.apps.Sweep'
  if (project.hasProperty('lcs')) {
    args lcs
  }
}

task diagrotate(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  main = 'com.salisburyclan.lpviewport.apps.DiagRotate'
  if (project.hasProperty('lcs')) {
    args lcs
  }
}

task testcm(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  main = 'com.salisburyclan.lpviewport.apps.TestCoreMidi'
}

